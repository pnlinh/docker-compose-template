version: '3.4'

services:
    app:
        image: pnlinh/symfony:${PHP_VERSION:-php8.1}
        hostname: "${DOCKER_PREFIX_NAME}-app"
        container_name: "${DOCKER_PREFIX_NAME}-app"
        environment:
            PHP_IDE_CONFIG: serverName="${DOCKER_PREFIX_NAME}-app.docker.cli"
        extra_hosts:
            - host.docker.internal:host-gateway
        ports:
            - "${DOCKER_APP_PORT:-80}:80"
        volumes:
            - ./:/var/www/html
        networks:
            - localnet

    pgsql:
        image: postgres:14
        container_name: "${DOCKER_PREFIX_NAME}-pgsql"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        ports:
            - "${DOCKER_DB_PORT:-5432}:5432"
        volumes:
            - pgsql-data:/var/lib/postgresql/data
            - ./docker/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s
        networks:
            - localnet

    redis:
        image: redis:alpine
        container_name: "${DOCKER_PREFIX_NAME}-redis"
        ports:
            - "${DOCKER_REDIS_PORT:-6379}:6379"
        volumes:
            - redis-data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s
        networks:
            - localnet

    mailhog:
        image: mailhog/mailhog
        container_name: "${DOCKER_PREFIX_NAME}-mailhog"
        ports:
            - "${DOCKER_MAIL_PORT:-8025}:8025"
        healthcheck:
            test: [ "CMD", "echo | telnet 127.0.0.1 8025" ]
            retries: 3
            timeout: 5s
        networks:
            - localnet

    static-builder:
        build:
            context: .
            dockerfile: docker/node.Dockerfile
        image: pnlinh/symfony-encore
        container_name: symfony-encore
        volumes:
            - ./:/app

volumes:
    pgsql-data:
        driver: local
    redis-data:
        driver: local

networks:
    localnet:
        driver: "bridge"
